// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// byteStringToString
std::string byteStringToString(const std::string& s);
RcppExport SEXP _PDFR_byteStringToString(SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(byteStringToString(s));
    return rcpp_result_gen;
END_RCPP
}
// get_partial_file
std::string get_partial_file(const std::string& filename, long start, long stop);
RcppExport SEXP _PDFR_get_partial_file(SEXP filenameSEXP, SEXP startSEXP, SEXP stopSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< long >::type start(startSEXP);
    Rcpp::traits::input_parameter< long >::type stop(stopSEXP);
    rcpp_result_gen = Rcpp::wrap(get_partial_file(filename, start, stop));
    return rcpp_result_gen;
END_RCPP
}
// get_xref
Rcpp::DataFrame get_xref(const std::string& filename);
RcppExport SEXP _PDFR_get_xref(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(get_xref(filename));
    return rcpp_result_gen;
END_RCPP
}
// get_object
Rcpp::List get_object(const std::string& filename, int o);
RcppExport SEXP _PDFR_get_object(SEXP filenameSEXP, SEXP oSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< int >::type o(oSEXP);
    rcpp_result_gen = Rcpp::wrap(get_object(filename, o));
    return rcpp_result_gen;
END_RCPP
}
// get_obj_stream
std::string get_obj_stream(const std::string& filename, int o);
RcppExport SEXP _PDFR_get_obj_stream(SEXP filenameSEXP, SEXP oSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< int >::type o(oSEXP);
    rcpp_result_gen = Rcpp::wrap(get_obj_stream(filename, o));
    return rcpp_result_gen;
END_RCPP
}
// pdfdoc
Rcpp::List pdfdoc(const std::string& filepath);
RcppExport SEXP _PDFR_pdfdoc(SEXP filepathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type filepath(filepathSEXP);
    rcpp_result_gen = Rcpp::wrap(pdfdoc(filepath));
    return rcpp_result_gen;
END_RCPP
}
// pdfpage
Rcpp::List pdfpage(const std::string& filename, int pagenum);
RcppExport SEXP _PDFR_pdfpage(SEXP filenameSEXP, SEXP pagenumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< int >::type pagenum(pagenumSEXP);
    rcpp_result_gen = Rcpp::wrap(pdfpage(filename, pagenum));
    return rcpp_result_gen;
END_RCPP
}
// carveout
std::string carveout(const std::string& subject, const std::string& precarve, const std::string& postcarve);
RcppExport SEXP _PDFR_carveout(SEXP subjectSEXP, SEXP precarveSEXP, SEXP postcarveSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type subject(subjectSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type precarve(precarveSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type postcarve(postcarveSEXP);
    rcpp_result_gen = Rcpp::wrap(carveout(subject, precarve, postcarve));
    return rcpp_result_gen;
END_RCPP
}
// splitter
std::vector<std::string> splitter(const std::string& subject, const std::string& matcher);
RcppExport SEXP _PDFR_splitter(SEXP subjectSEXP, SEXP matcherSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type subject(subjectSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type matcher(matcherSEXP);
    rcpp_result_gen = Rcpp::wrap(splitter(subject, matcher));
    return rcpp_result_gen;
END_RCPP
}
// Rex
std::vector<std::string> Rex(const std::vector<std::string>& strvec, std::string matcher);
RcppExport SEXP _PDFR_Rex(SEXP strvecSEXP, SEXP matcherSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type strvec(strvecSEXP);
    Rcpp::traits::input_parameter< std::string >::type matcher(matcherSEXP);
    rcpp_result_gen = Rcpp::wrap(Rex(strvec, matcher));
    return rcpp_result_gen;
END_RCPP
}
// rc4
std::vector<uint8_t> rc4(std::vector<uint8_t> msg, std::vector<uint8_t> key);
RcppExport SEXP _PDFR_rc4(SEXP msgSEXP, SEXP keySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<uint8_t> >::type msg(msgSEXP);
    Rcpp::traits::input_parameter< std::vector<uint8_t> >::type key(keySEXP);
    rcpp_result_gen = Rcpp::wrap(rc4(msg, key));
    return rcpp_result_gen;
END_RCPP
}
// md5
std::vector<uint8_t> md5(std::vector<uint8_t> input);
RcppExport SEXP _PDFR_md5(SEXP inputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<uint8_t> >::type input(inputSEXP);
    rcpp_result_gen = Rcpp::wrap(md5(input));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PDFR_byteStringToString", (DL_FUNC) &_PDFR_byteStringToString, 1},
    {"_PDFR_get_partial_file", (DL_FUNC) &_PDFR_get_partial_file, 3},
    {"_PDFR_get_xref", (DL_FUNC) &_PDFR_get_xref, 1},
    {"_PDFR_get_object", (DL_FUNC) &_PDFR_get_object, 2},
    {"_PDFR_get_obj_stream", (DL_FUNC) &_PDFR_get_obj_stream, 2},
    {"_PDFR_pdfdoc", (DL_FUNC) &_PDFR_pdfdoc, 1},
    {"_PDFR_pdfpage", (DL_FUNC) &_PDFR_pdfpage, 2},
    {"_PDFR_carveout", (DL_FUNC) &_PDFR_carveout, 3},
    {"_PDFR_splitter", (DL_FUNC) &_PDFR_splitter, 2},
    {"_PDFR_Rex", (DL_FUNC) &_PDFR_Rex, 2},
    {"_PDFR_rc4", (DL_FUNC) &_PDFR_rc4, 2},
    {"_PDFR_md5", (DL_FUNC) &_PDFR_md5, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_PDFR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
