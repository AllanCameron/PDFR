//---------------------------------------------------------------------------//
//                                                                           //
//  PDFR core fonts implementation file                                      //
//                                                                           //
//  Copyright (C) 2018 by Allan Cameron                                      //
//                                                                           //
//  Permission is hereby granted, free of charge, to any person obtaining    //
//  a copy of this software and associated documentation files               //
//  (the "Software"), to deal in the Software without restriction, including //
//  without limitation the rights to use, copy, modify, merge, publish,      //
//  distribute, sublicense, and/or sell copies of the Software, and to       //
//  permit persons to whom the Software is furnished to do so, subject to    //
//  the following conditions:                                                //
//                                                                           //
//  The above copyright notice and this permission notice shall be included  //
//  in all copies or substantial portions of the Software.                   //
//                                                                           //
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  //
//  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               //
//  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   //
//  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY     //
//  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,     //
//  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE        //
//  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                   //
//                                                                           //
//---------------------------------------------------------------------------//

#include "pdfr.h"
#include "corefonts.h"

font getCourier()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Courier";
    thisfont.FontBBox = {-23, -250, 715, 805};
    std::map<uint16_t, int> cm;
    cm[32] = 600; cm[33] = 600; cm[34] = 600; cm[35] = 600;
    cm[36] = 600; cm[37] = 600; cm[38] = 600; cm[39] = 600;
    cm[40] = 600; cm[41] = 600; cm[42] = 600; cm[43] = 600;
    cm[44] = 600; cm[45] = 600; cm[46] = 600; cm[47] = 600;
    cm[48] = 600; cm[49] = 600; cm[50] = 600; cm[51] = 600;
    cm[52] = 600; cm[53] = 600; cm[54] = 600; cm[55] = 600;
    cm[56] = 600; cm[57] = 600; cm[58] = 600; cm[59] = 600;
    cm[60] = 600; cm[61] = 600; cm[62] = 600; cm[63] = 600;
    cm[64] = 600; cm[65] = 600; cm[66] = 600; cm[67] = 600;
    cm[68] = 600; cm[69] = 600; cm[70] = 600; cm[71] = 600;
    cm[72] = 600; cm[73] = 600; cm[74] = 600; cm[75] = 600;
    cm[76] = 600; cm[77] = 600; cm[78] = 600; cm[79] = 600;
    cm[80] = 600; cm[81] = 600; cm[82] = 600; cm[83] = 600;
    cm[84] = 600; cm[85] = 600; cm[86] = 600; cm[87] = 600;
    cm[88] = 600; cm[89] = 600; cm[90] = 600; cm[91] = 600;
    cm[92] = 600; cm[93] = 600; cm[94] = 600; cm[95] = 600;
    cm[96] = 600; cm[97] = 600; cm[98] = 600; cm[99] = 600;
    cm[100] = 600; cm[101] = 600; cm[102] = 600;
    cm[103] = 600; cm[104] = 600; cm[105] = 600;
    cm[106] = 600; cm[107] = 600; cm[108] = 600;
    cm[109] = 600; cm[110] = 600; cm[111] = 600;
    cm[112] = 600; cm[113] = 600; cm[114] = 600;
    cm[115] = 600; cm[116] = 600; cm[117] = 600;
    cm[118] = 600; cm[119] = 600; cm[120] = 600;
    cm[121] = 600; cm[122] = 600; cm[123] = 600;
    cm[124] = 600; cm[125] = 600; cm[126] = 600;
    cm[161] = 600; cm[162] = 600; cm[163] = 600;
    cm[164] = 600; cm[165] = 600; cm[166] = 600;
    cm[167] = 600; cm[168] = 600; cm[169] = 600;
    cm[170] = 600; cm[171] = 600; cm[172] = 600;
    cm[173] = 600; cm[174] = 600; cm[175] = 600;
    cm[177] = 600; cm[178] = 600; cm[179] = 600;
    cm[180] = 600; cm[182] = 600; cm[183] = 600;
    cm[184] = 600; cm[185] = 600; cm[186] = 600;
    cm[187] = 600; cm[188] = 600; cm[189] = 600;
    cm[191] = 600; cm[193] = 600; cm[194] = 600;
    cm[195] = 600; cm[196] = 600; cm[197] = 600;
    cm[198] = 600; cm[199] = 600; cm[200] = 600;
    cm[202] = 600; cm[203] = 600; cm[205] = 600;
    cm[206] = 600; cm[207] = 600; cm[208] = 600;
    cm[225] = 600; cm[227] = 600; cm[232] = 600;
    cm[233] = 600; cm[234] = 600; cm[235] = 600;
    cm[241] = 600; cm[245] = 600; cm[248] = 600;
    cm[249] = 600; cm[250] = 600; cm[251] = 600;
    thisfont.Width = cm;
    return thisfont;
  }

font getCourierBold()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Courier-Bold";
    thisfont.FontBBox = {-113, -250, 749, 801};
    std::map<uint16_t, int> cm;
    cm[32] = 600; cm[33] = 600; cm[34] = 600; cm[35] = 600;
    cm[36] = 600; cm[37] = 600; cm[38] = 600; cm[39] = 600;
    cm[40] = 600; cm[41] = 600; cm[42] = 600; cm[43] = 600;
    cm[44] = 600; cm[45] = 600; cm[46] = 600; cm[47] = 600;
    cm[48] = 600; cm[49] = 600; cm[50] = 600; cm[51] = 600;
    cm[52] = 600; cm[53] = 600; cm[54] = 600; cm[55] = 600;
    cm[56] = 600; cm[57] = 600; cm[58] = 600; cm[59] = 600;
    cm[60] = 600; cm[61] = 600; cm[62] = 600; cm[63] = 600;
    cm[64] = 600; cm[65] = 600; cm[66] = 600; cm[67] = 600;
    cm[68] = 600; cm[69] = 600; cm[70] = 600; cm[71] = 600;
    cm[72] = 600; cm[73] = 600; cm[74] = 600; cm[75] = 600;
    cm[76] = 600; cm[77] = 600; cm[78] = 600; cm[79] = 600;
    cm[80] = 600; cm[81] = 600; cm[82] = 600; cm[83] = 600;
    cm[84] = 600; cm[85] = 600; cm[86] = 600; cm[87] = 600;
    cm[88] = 600; cm[89] = 600; cm[90] = 600; cm[91] = 600;
    cm[92] = 600; cm[93] = 600; cm[94] = 600; cm[95] = 600;
    cm[96] = 600; cm[97] = 600; cm[98] = 600; cm[99] = 600;
    cm[100] = 600; cm[101] = 600; cm[102] = 600;
    cm[103] = 600; cm[104] = 600; cm[105] = 600;
    cm[106] = 600; cm[107] = 600; cm[108] = 600;
    cm[109] = 600; cm[110] = 600; cm[111] = 600;
    cm[112] = 600; cm[113] = 600; cm[114] = 600;
    cm[115] = 600; cm[116] = 600; cm[117] = 600;
    cm[118] = 600; cm[119] = 600; cm[120] = 600;
    cm[121] = 600; cm[122] = 600; cm[123] = 600;
    cm[124] = 600; cm[125] = 600; cm[126] = 600;
    cm[161] = 600; cm[162] = 600; cm[163] = 600;
    cm[164] = 600; cm[165] = 600; cm[166] = 600;
    cm[167] = 600; cm[168] = 600; cm[169] = 600;
    cm[170] = 600; cm[171] = 600; cm[172] = 600;
    cm[173] = 600; cm[174] = 600; cm[175] = 600;
    cm[177] = 600; cm[178] = 600; cm[179] = 600;
    cm[180] = 600; cm[182] = 600; cm[183] = 600;
    cm[184] = 600; cm[185] = 600; cm[186] = 600;
    cm[187] = 600; cm[188] = 600; cm[189] = 600;
    cm[191] = 600; cm[193] = 600; cm[194] = 600;
    cm[195] = 600; cm[196] = 600; cm[197] = 600;
    cm[198] = 600; cm[199] = 600; cm[200] = 600;
    cm[202] = 600; cm[203] = 600; cm[205] = 600;
    cm[206] = 600; cm[207] = 600; cm[208] = 600;
    cm[225] = 600; cm[227] = 600; cm[232] = 600;
    cm[233] = 600; cm[234] = 600; cm[235] = 600;
    cm[241] = 600; cm[245] = 600; cm[248] = 600;
    cm[249] = 600; cm[250] = 600; cm[251] = 600;
    thisfont.Width = cm;
    return thisfont;
  }


font getCourierBO()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Courier-BoldOblique";
    thisfont.FontBBox = {-57, -250, 869, 801};
    std::map<uint16_t, int> cm;
    cm[32] = 600; cm[33] = 600; cm[34] = 600; cm[35] = 600;
    cm[36] = 600; cm[37] = 600; cm[38] = 600; cm[39] = 600;
    cm[40] = 600; cm[41] = 600; cm[42] = 600; cm[43] = 600;
    cm[44] = 600; cm[45] = 600; cm[46] = 600; cm[47] = 600;
    cm[48] = 600; cm[49] = 600; cm[50] = 600; cm[51] = 600;
    cm[52] = 600; cm[53] = 600; cm[54] = 600; cm[55] = 600;
    cm[56] = 600; cm[57] = 600; cm[58] = 600; cm[59] = 600;
    cm[60] = 600; cm[61] = 600; cm[62] = 600; cm[63] = 600;
    cm[64] = 600; cm[65] = 600; cm[66] = 600; cm[67] = 600;
    cm[68] = 600; cm[69] = 600; cm[70] = 600; cm[71] = 600;
    cm[72] = 600; cm[73] = 600; cm[74] = 600; cm[75] = 600;
    cm[76] = 600; cm[77] = 600; cm[78] = 600; cm[79] = 600;
    cm[80] = 600; cm[81] = 600; cm[82] = 600; cm[83] = 600;
    cm[84] = 600; cm[85] = 600; cm[86] = 600; cm[87] = 600;
    cm[88] = 600; cm[89] = 600; cm[90] = 600; cm[91] = 600;
    cm[92] = 600; cm[93] = 600; cm[94] = 600; cm[95] = 600;
    cm[96] = 600; cm[97] = 600; cm[98] = 600; cm[99] = 600;
    cm[100] = 600; cm[101] = 600; cm[102] = 600;
    cm[103] = 600; cm[104] = 600; cm[105] = 600;
    cm[106] = 600; cm[107] = 600; cm[108] = 600;
    cm[109] = 600; cm[110] = 600; cm[111] = 600;
    cm[112] = 600; cm[113] = 600; cm[114] = 600;
    cm[115] = 600; cm[116] = 600; cm[117] = 600;
    cm[118] = 600; cm[119] = 600; cm[120] = 600;
    cm[121] = 600; cm[122] = 600; cm[123] = 600;
    cm[124] = 600; cm[125] = 600; cm[126] = 600;
    cm[161] = 600; cm[162] = 600; cm[163] = 600;
    cm[164] = 600; cm[165] = 600; cm[166] = 600;
    cm[167] = 600; cm[168] = 600; cm[169] = 600;
    cm[170] = 600; cm[171] = 600; cm[172] = 600;
    cm[173] = 600; cm[174] = 600; cm[175] = 600;
    cm[177] = 600; cm[178] = 600; cm[179] = 600;
    cm[180] = 600; cm[182] = 600; cm[183] = 600;
    cm[184] = 600; cm[185] = 600; cm[186] = 600;
    cm[187] = 600; cm[188] = 600; cm[189] = 600;
    cm[191] = 600; cm[193] = 600; cm[194] = 600;
    cm[195] = 600; cm[196] = 600; cm[197] = 600;
    cm[198] = 600; cm[199] = 600; cm[200] = 600;
    cm[202] = 600; cm[203] = 600; cm[205] = 600;
    cm[206] = 600; cm[207] = 600; cm[208] = 600;
    cm[225] = 600; cm[227] = 600; cm[232] = 600;
    cm[233] = 600; cm[234] = 600; cm[235] = 600;
    cm[241] = 600; cm[245] = 600; cm[248] = 600;
    cm[249] = 600; cm[250] = 600; cm[251] = 600;
    thisfont.Width = cm;
    return thisfont;
  }

font getCourierOblique()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Courier-Oblique";
    thisfont.FontBBox = {-27, -250, 849, 805};
    std::map<uint16_t, int> cm;
    cm[32] = 600; cm[33] = 600; cm[34] = 600; cm[35] = 600;
    cm[36] = 600; cm[37] = 600; cm[38] = 600; cm[39] = 600;
    cm[40] = 600; cm[41] = 600; cm[42] = 600; cm[43] = 600;
    cm[44] = 600; cm[45] = 600; cm[46] = 600; cm[47] = 600;
    cm[48] = 600; cm[49] = 600; cm[50] = 600; cm[51] = 600;
    cm[52] = 600; cm[53] = 600; cm[54] = 600; cm[55] = 600;
    cm[56] = 600; cm[57] = 600; cm[58] = 600; cm[59] = 600;
    cm[60] = 600; cm[61] = 600; cm[62] = 600; cm[63] = 600;
    cm[64] = 600; cm[65] = 600; cm[66] = 600; cm[67] = 600;
    cm[68] = 600; cm[69] = 600; cm[70] = 600; cm[71] = 600;
    cm[72] = 600; cm[73] = 600; cm[74] = 600; cm[75] = 600;
    cm[76] = 600; cm[77] = 600; cm[78] = 600; cm[79] = 600;
    cm[80] = 600; cm[81] = 600; cm[82] = 600; cm[83] = 600;
    cm[84] = 600; cm[85] = 600; cm[86] = 600; cm[87] = 600;
    cm[88] = 600; cm[89] = 600; cm[90] = 600; cm[91] = 600;
    cm[92] = 600; cm[93] = 600; cm[94] = 600; cm[95] = 600;
    cm[96] = 600; cm[97] = 600; cm[98] = 600; cm[99] = 600;
    cm[100] = 600; cm[101] = 600; cm[102] = 600;
    cm[103] = 600; cm[104] = 600; cm[105] = 600;
    cm[106] = 600; cm[107] = 600; cm[108] = 600;
    cm[109] = 600; cm[110] = 600; cm[111] = 600;
    cm[112] = 600; cm[113] = 600; cm[114] = 600;
    cm[115] = 600; cm[116] = 600; cm[117] = 600;
    cm[118] = 600; cm[119] = 600; cm[120] = 600;
    cm[121] = 600; cm[122] = 600; cm[123] = 600;
    cm[124] = 600; cm[125] = 600; cm[126] = 600;
    cm[161] = 600; cm[162] = 600; cm[163] = 600;
    cm[164] = 600; cm[165] = 600; cm[166] = 600;
    cm[167] = 600; cm[168] = 600; cm[169] = 600;
    cm[170] = 600; cm[171] = 600; cm[172] = 600;
    cm[173] = 600; cm[174] = 600; cm[175] = 600;
    cm[177] = 600; cm[178] = 600; cm[179] = 600;
    cm[180] = 600; cm[182] = 600; cm[183] = 600;
    cm[184] = 600; cm[185] = 600; cm[186] = 600;
    cm[187] = 600; cm[188] = 600; cm[189] = 600;
    cm[191] = 600; cm[193] = 600; cm[194] = 600;
    cm[195] = 600; cm[196] = 600; cm[197] = 600;
    cm[198] = 600; cm[199] = 600; cm[200] = 600;
    cm[202] = 600; cm[203] = 600; cm[205] = 600;
    cm[206] = 600; cm[207] = 600; cm[208] = 600;
    cm[225] = 600; cm[227] = 600; cm[232] = 600;
    cm[233] = 600; cm[234] = 600; cm[235] = 600;
    cm[241] = 600; cm[245] = 600; cm[248] = 600;
    cm[249] = 600; cm[250] = 600; cm[251] = 600;
    thisfont.Width = cm;
    return thisfont;
  }


font getHelvetica()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Helvetica";
    thisfont.FontBBox = {-166, -225, 1000, 931};
    std::map<uint16_t, int> cm;
    cm[32] = 278; cm[33] = 278; cm[34] = 355; cm[35] = 556;
    cm[36] = 556; cm[37] = 889; cm[38] = 667; cm[39] = 222;
    cm[40] = 333; cm[41] = 333; cm[42] = 389; cm[43] = 584;
    cm[44] = 278; cm[45] = 333; cm[46] = 278; cm[47] = 278;
    cm[48] = 556; cm[49] = 556; cm[50] = 556; cm[51] = 556;
    cm[52] = 556; cm[53] = 556; cm[54] = 556; cm[55] = 556;
    cm[56] = 556; cm[57] = 556; cm[58] = 278; cm[59] = 278;
    cm[60] = 584; cm[61] = 584; cm[62] = 584; cm[63] = 556;
    cm[64] = 1015; cm[65] = 667; cm[66] = 667; cm[67] = 722;
    cm[68] = 722; cm[69] = 667; cm[70] = 611; cm[71] = 778;
    cm[72] = 722; cm[73] = 278; cm[74] = 500; cm[75] = 667;
    cm[76] = 556; cm[77] = 833; cm[78] = 722; cm[79] = 778;
    cm[80] = 667; cm[81] = 778; cm[82] = 722; cm[83] = 667;
    cm[84] = 611; cm[85] = 722; cm[86] = 667; cm[87] = 944;
    cm[88] = 667; cm[89] = 667; cm[90] = 611; cm[91] = 278;
    cm[92] = 278; cm[93] = 278; cm[94] = 469; cm[95] = 556;
    cm[96] = 222; cm[97] = 556; cm[98] = 556; cm[99] = 500;
    cm[100] = 556; cm[101] = 556; cm[102] = 278;
    cm[103] = 556; cm[104] = 556; cm[105] = 222;
    cm[106] = 222; cm[107] = 500; cm[108] = 222;
    cm[109] = 833; cm[110] = 556; cm[111] = 556;
    cm[112] = 556; cm[113] = 556; cm[114] = 333;
    cm[115] = 500; cm[116] = 278; cm[117] = 556;
    cm[118] = 500; cm[119] = 722; cm[120] = 500;
    cm[121] = 500; cm[122] = 500; cm[123] = 334;
    cm[124] = 260; cm[125] = 334; cm[126] = 584;
    cm[161] = 333; cm[162] = 556; cm[163] = 556;
    cm[164] = 167; cm[165] = 556; cm[166] = 556;
    cm[167] = 556; cm[168] = 556; cm[169] = 191;
    cm[170] = 333; cm[171] = 556; cm[172] = 333;
    cm[173] = 333; cm[174] = 500; cm[175] = 500;
    cm[177] = 556; cm[178] = 556; cm[179] = 556;
    cm[180] = 278; cm[182] = 537; cm[183] = 350;
    cm[184] = 222; cm[185] = 333; cm[186] = 333;
    cm[187] = 556; cm[188] = 1000; cm[189] = 1000;
    cm[191] = 611; cm[193] = 333; cm[194] = 333;
    cm[195] = 333; cm[196] = 333; cm[197] = 333;
    cm[198] = 333; cm[199] = 333; cm[200] = 333;
    cm[202] = 333; cm[203] = 333; cm[205] = 333;
    cm[206] = 333; cm[207] = 333; cm[208] = 1000;
    cm[225] = 1000; cm[227] = 370; cm[232] = 556;
    cm[233] = 778; cm[234] = 1000; cm[235] = 365;
    cm[241] = 889; cm[245] = 278; cm[248] = 222;
    cm[249] = 611; cm[250] = 944; cm[251] = 611;
    thisfont.Width = cm;
    return thisfont;
  }

font getHelveticaBold()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Helvetica-Bold";
    thisfont.FontBBox = {-170, -228, 1003, 962};
    std::map<uint16_t, int> cm;
    cm[32] = 278; cm[33] = 333; cm[34] = 474; cm[35] = 556;
    cm[36] = 556; cm[37] = 889; cm[38] = 722; cm[39] = 278;
    cm[40] = 333; cm[41] = 333; cm[42] = 389; cm[43] = 584;
    cm[44] = 278; cm[45] = 333; cm[46] = 278; cm[47] = 278;
    cm[48] = 556; cm[49] = 556; cm[50] = 556; cm[51] = 556;
    cm[52] = 556; cm[53] = 556; cm[54] = 556; cm[55] = 556;
    cm[56] = 556; cm[57] = 556; cm[58] = 333; cm[59] = 333;
    cm[60] = 584; cm[61] = 584; cm[62] = 584; cm[63] = 611;
    cm[64] = 975; cm[65] = 722; cm[66] = 722; cm[67] = 722;
    cm[68] = 722; cm[69] = 667; cm[70] = 611; cm[71] = 778;
    cm[72] = 722; cm[73] = 278; cm[74] = 556; cm[75] = 722;
    cm[76] = 611; cm[77] = 833; cm[78] = 722; cm[79] = 778;
    cm[80] = 667; cm[81] = 778; cm[82] = 722; cm[83] = 667;
    cm[84] = 611; cm[85] = 722; cm[86] = 667; cm[87] = 944;
    cm[88] = 667; cm[89] = 667; cm[90] = 611; cm[91] = 333;
    cm[92] = 278; cm[93] = 333; cm[94] = 584; cm[95] = 556;
    cm[96] = 278; cm[97] = 556; cm[98] = 611; cm[99] = 556;
    cm[100] = 611; cm[101] = 556; cm[102] = 333;
    cm[103] = 611; cm[104] = 611; cm[105] = 278;
    cm[106] = 278; cm[107] = 556; cm[108] = 278;
    cm[109] = 889; cm[110] = 611; cm[111] = 611;
    cm[112] = 611; cm[113] = 611; cm[114] = 389;
    cm[115] = 556; cm[116] = 333; cm[117] = 611;
    cm[118] = 556; cm[119] = 778; cm[120] = 556;
    cm[121] = 556; cm[122] = 500; cm[123] = 389;
    cm[124] = 280; cm[125] = 389; cm[126] = 584;
    cm[161] = 333; cm[162] = 556; cm[163] = 556;
    cm[164] = 167; cm[165] = 556; cm[166] = 556;
    cm[167] = 556; cm[168] = 556; cm[169] = 238;
    cm[170] = 500; cm[171] = 556; cm[172] = 333;
    cm[173] = 333; cm[174] = 611; cm[175] = 611;
    cm[177] = 556; cm[178] = 556; cm[179] = 556;
    cm[180] = 278; cm[182] = 556; cm[183] = 350;
    cm[184] = 278; cm[185] = 500; cm[186] = 500;
    cm[187] = 556; cm[188] = 1000; cm[189] = 1000;
    cm[191] = 611; cm[193] = 333; cm[194] = 333;
    cm[195] = 333; cm[196] = 333; cm[197] = 333;
    cm[198] = 333; cm[199] = 333; cm[200] = 333;
    cm[202] = 333; cm[203] = 333; cm[205] = 333;
    cm[206] = 333; cm[207] = 333; cm[208] = 1000;
    cm[225] = 1000; cm[227] = 370; cm[232] = 611;
    cm[233] = 778; cm[234] = 1000; cm[235] = 365;
    cm[241] = 889; cm[245] = 278; cm[248] = 278;
    cm[249] = 611; cm[250] = 944; cm[251] = 611;
    thisfont.Width = cm;
    return thisfont;
  }

font getHelveticaBO()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Helvetica-Boldoblique";
    thisfont.FontBBox = {-174, -228, 1114, 962};
    std::map<uint16_t, int> cm;
    cm[32] = 278; cm[33] = 333; cm[34] = 474; cm[35] = 556;
    cm[36] = 556; cm[37] = 889; cm[38] = 722; cm[39] = 278;
    cm[40] = 333; cm[41] = 333; cm[42] = 389; cm[43] = 584;
    cm[44] = 278; cm[45] = 333; cm[46] = 278; cm[47] = 278;
    cm[48] = 556; cm[49] = 556; cm[50] = 556; cm[51] = 556;
    cm[52] = 556; cm[53] = 556; cm[54] = 556; cm[55] = 556;
    cm[56] = 556; cm[57] = 556; cm[58] = 333; cm[59] = 333;
    cm[60] = 584; cm[61] = 584; cm[62] = 584; cm[63] = 611;
    cm[64] = 975; cm[65] = 722; cm[66] = 722; cm[67] = 722;
    cm[68] = 722; cm[69] = 667; cm[70] = 611; cm[71] = 778;
    cm[72] = 722; cm[73] = 278; cm[74] = 556; cm[75] = 722;
    cm[76] = 611; cm[77] = 833; cm[78] = 722; cm[79] = 778;
    cm[80] = 667; cm[81] = 778; cm[82] = 722; cm[83] = 667;
    cm[84] = 611; cm[85] = 722; cm[86] = 667; cm[87] = 944;
    cm[88] = 667; cm[89] = 667; cm[90] = 611; cm[91] = 333;
    cm[92] = 278; cm[93] = 333; cm[94] = 584; cm[95] = 556;
    cm[96] = 278; cm[97] = 556; cm[98] = 611; cm[99] = 556;
    cm[100] = 611; cm[101] = 556; cm[102] = 333;
    cm[103] = 611; cm[104] = 611; cm[105] = 278;
    cm[106] = 278; cm[107] = 556; cm[108] = 278;
    cm[109] = 889; cm[110] = 611; cm[111] = 611;
    cm[112] = 611; cm[113] = 611; cm[114] = 389;
    cm[115] = 556; cm[116] = 333; cm[117] = 611;
    cm[118] = 556; cm[119] = 778; cm[120] = 556;
    cm[121] = 556; cm[122] = 500; cm[123] = 389;
    cm[124] = 280; cm[125] = 389; cm[126] = 584;
    cm[161] = 333; cm[162] = 556; cm[163] = 556;
    cm[164] = 167; cm[165] = 556; cm[166] = 556;
    cm[167] = 556; cm[168] = 556; cm[169] = 238;
    cm[170] = 500; cm[171] = 556; cm[172] = 333;
    cm[173] = 333; cm[174] = 611; cm[175] = 611;
    cm[177] = 556; cm[178] = 556; cm[179] = 556;
    cm[180] = 278; cm[182] = 556; cm[183] = 350;
    cm[184] = 278; cm[185] = 500; cm[186] = 500;
    cm[187] = 556; cm[188] = 1000; cm[189] = 1000;
    cm[191] = 611; cm[193] = 333; cm[194] = 333;
    cm[195] = 333; cm[196] = 333; cm[197] = 333;
    cm[198] = 333; cm[199] = 333; cm[200] = 333;
    cm[202] = 333; cm[203] = 333; cm[205] = 333;
    cm[206] = 333; cm[207] = 333; cm[208] = 1000;
    cm[225] = 1000; cm[227] = 370; cm[232] = 611;
    cm[233] = 778; cm[234] = 1000; cm[235] = 365;
    cm[241] = 889; cm[245] = 278; cm[248] = 278;
    cm[249] = 611; cm[250] = 944; cm[251] = 611;
    thisfont.Width = cm;
    return thisfont;
  }

font getHelveticaOblique()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Helvetica-Oblique";
    thisfont.FontBBox = {-170, -225, 1116, 931};
    std::map<uint16_t, int> cm;
    cm[32] = 278; cm[33] = 278; cm[34] = 355; cm[35] = 556;
    cm[36] = 556; cm[37] = 889; cm[38] = 667; cm[39] = 222;
    cm[40] = 333; cm[41] = 333; cm[42] = 389; cm[43] = 584;
    cm[44] = 278; cm[45] = 333; cm[46] = 278; cm[47] = 278;
    cm[48] = 556; cm[49] = 556; cm[50] = 556; cm[51] = 556;
    cm[52] = 556; cm[53] = 556; cm[54] = 556; cm[55] = 556;
    cm[56] = 556; cm[57] = 556; cm[58] = 278; cm[59] = 278;
    cm[60] = 584; cm[61] = 584; cm[62] = 584; cm[63] = 556;
    cm[64] = 1015; cm[65] = 667; cm[66] = 667; cm[67] = 722;
    cm[68] = 722; cm[69] = 667; cm[70] = 611; cm[71] = 778;
    cm[72] = 722; cm[73] = 278; cm[74] = 500; cm[75] = 667;
    cm[76] = 556; cm[77] = 833; cm[78] = 722; cm[79] = 778;
    cm[80] = 667; cm[81] = 778; cm[82] = 722; cm[83] = 667;
    cm[84] = 611; cm[85] = 722; cm[86] = 667; cm[87] = 944;
    cm[88] = 667; cm[89] = 667; cm[90] = 611; cm[91] = 278;
    cm[92] = 278; cm[93] = 278; cm[94] = 469; cm[95] = 556;
    cm[96] = 222; cm[97] = 556; cm[98] = 556; cm[99] = 500;
    cm[100] = 556; cm[101] = 556; cm[102] = 278;
    cm[103] = 556; cm[104] = 556; cm[105] = 222;
    cm[106] = 222; cm[107] = 500; cm[108] = 222;
    cm[109] = 833; cm[110] = 556; cm[111] = 556;
    cm[112] = 556; cm[113] = 556; cm[114] = 333;
    cm[115] = 500; cm[116] = 278; cm[117] = 556;
    cm[118] = 500; cm[119] = 722; cm[120] = 500;
    cm[121] = 500; cm[122] = 500; cm[123] = 334;
    cm[124] = 260; cm[125] = 334; cm[126] = 584;
    cm[161] = 333; cm[162] = 556; cm[163] = 556;
    cm[164] = 167; cm[165] = 556; cm[166] = 556;
    cm[167] = 556; cm[168] = 556; cm[169] = 191;
    cm[170] = 333; cm[171] = 556; cm[172] = 333;
    cm[173] = 333; cm[174] = 500; cm[175] = 500;
    cm[177] = 556; cm[178] = 556; cm[179] = 556;
    cm[180] = 278; cm[182] = 537; cm[183] = 350;
    cm[184] = 222; cm[185] = 333; cm[186] = 333;
    cm[187] = 556; cm[188] = 1000; cm[189] = 1000;
    cm[191] = 611; cm[193] = 333; cm[194] = 333;
    cm[195] = 333; cm[196] = 333; cm[197] = 333;
    cm[198] = 333; cm[199] = 333; cm[200] = 333;
    cm[202] = 333; cm[203] = 333; cm[205] = 333;
    cm[206] = 333; cm[207] = 333; cm[208] = 1000;
    cm[225] = 1000; cm[227] = 370; cm[232] = 556;
    cm[233] = 778; cm[234] = 1000; cm[235] = 365;
    cm[241] = 889; cm[245] = 278; cm[248] = 222;
    cm[249] = 611; cm[250] = 944; cm[251] = 611;
    thisfont.Width = cm;
    return thisfont;
  }


font getSymbol()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Symbol";
    thisfont.FontBBox = {-180, -293, 1090, 1010};
    std::map<uint16_t, int> cm;
    cm[32] = 250; cm[33] = 333; cm[34] = 713; cm[35] = 500;
    cm[36] = 549; cm[37] = 833; cm[38] = 778; cm[39] = 439;
    cm[40] = 333; cm[41] = 333; cm[42] = 500; cm[43] = 549;
    cm[44] = 250; cm[45] = 549; cm[46] = 250; cm[47] = 278;
    cm[48] = 500; cm[49] = 500; cm[50] = 500; cm[51] = 500;
    cm[52] = 500; cm[53] = 500; cm[54] = 500; cm[55] = 500;
    cm[56] = 500; cm[57] = 500; cm[58] = 278; cm[59] = 278;
    cm[60] = 549; cm[61] = 549; cm[62] = 549; cm[63] = 444;
    cm[64] = 549; cm[65] = 722; cm[66] = 667; cm[67] = 722;
    cm[68] = 612; cm[69] = 611; cm[70] = 763; cm[71] = 603;
    cm[72] = 722; cm[73] = 333; cm[74] = 631; cm[75] = 722;
    cm[76] = 686; cm[77] = 889; cm[78] = 722; cm[79] = 722;
    cm[80] = 768; cm[81] = 741; cm[82] = 556; cm[83] = 592;
    cm[84] = 611; cm[85] = 690; cm[86] = 439; cm[87] = 768;
    cm[88] = 645; cm[89] = 795; cm[90] = 611; cm[91] = 333;
    cm[92] = 863; cm[93] = 333; cm[94] = 658; cm[95] = 500;
    cm[96] = 500; cm[97] = 631; cm[98] = 549; cm[99] = 549;
    cm[100] = 494; cm[101] = 439; cm[102] = 521;
    cm[103] = 411; cm[104] = 603; cm[105] = 329;
    cm[106] = 603; cm[107] = 549; cm[108] = 549;
    cm[109] = 576; cm[110] = 521; cm[111] = 549;
    cm[112] = 549; cm[113] = 521; cm[114] = 549;
    cm[115] = 603; cm[116] = 439; cm[117] = 576;
    cm[118] = 713; cm[119] = 686; cm[120] = 493;
    cm[121] = 686; cm[122] = 494; cm[123] = 480;
    cm[124] = 200; cm[125] = 480; cm[126] = 549;
    cm[160] = 750; cm[161] = 620; cm[162] = 247;
    cm[163] = 549; cm[164] = 167; cm[165] = 713;
    cm[166] = 500; cm[167] = 753; cm[168] = 753;
    cm[169] = 753; cm[170] = 753; cm[171] = 1042;
    cm[172] = 987; cm[173] = 603; cm[174] = 987;
    cm[175] = 603; cm[176] = 400; cm[177] = 549;
    cm[178] = 411; cm[179] = 549; cm[180] = 549;
    cm[181] = 713; cm[182] = 494; cm[183] = 460;
    cm[184] = 549; cm[185] = 549; cm[186] = 549;
    cm[187] = 549; cm[188] = 1000; cm[189] = 603;
    cm[190] = 1000; cm[191] = 658; cm[192] = 823;
    cm[193] = 686; cm[194] = 795; cm[195] = 987;
    cm[196] = 768; cm[197] = 768; cm[198] = 823;
    cm[199] = 768; cm[200] = 768; cm[201] = 713;
    cm[202] = 713; cm[203] = 713; cm[204] = 713;
    cm[205] = 713; cm[206] = 713; cm[207] = 713;
    cm[208] = 768; cm[209] = 713; cm[210] = 790;
    cm[211] = 790; cm[212] = 890; cm[213] = 823;
    cm[214] = 549; cm[215] = 250; cm[216] = 713;
    cm[217] = 603; cm[218] = 603; cm[219] = 1042;
    cm[220] = 987; cm[221] = 603; cm[222] = 987;
    cm[223] = 603; cm[224] = 494; cm[225] = 329;
    cm[226] = 790; cm[227] = 790; cm[228] = 786;
    cm[229] = 713; cm[230] = 384; cm[231] = 384;
    cm[232] = 384; cm[233] = 384; cm[234] = 384;
    cm[235] = 384; cm[236] = 494; cm[237] = 494;
    cm[238] = 494; cm[239] = 494; cm[241] = 329;
    cm[242] = 274; cm[243] = 686; cm[244] = 686;
    cm[245] = 686; cm[246] = 384; cm[247] = 384;
    cm[248] = 384; cm[249] = 384; cm[250] = 384;
    cm[251] = 384; cm[252] = 494; cm[253] = 494;
    cm[254] = 494;
    thisfont.Width = cm;
    return thisfont;
  }

font getTimesBold()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Times-Bold";
    thisfont.FontBBox = {-168, -218, 1000, 935};
    std::map<uint16_t, int> cm;
    cm[32] = 250; cm[33] = 333; cm[34] = 555; cm[35] = 500;
    cm[36] = 500; cm[37] = 1000; cm[38] = 833; cm[39] = 333;
    cm[40] = 333; cm[41] = 333; cm[42] = 500; cm[43] = 570;
    cm[44] = 250; cm[45] = 333; cm[46] = 250; cm[47] = 278;
    cm[48] = 500; cm[49] = 500; cm[50] = 500; cm[51] = 500;
    cm[52] = 500; cm[53] = 500; cm[54] = 500; cm[55] = 500;
    cm[56] = 500; cm[57] = 500; cm[58] = 333; cm[59] = 333;
    cm[60] = 570; cm[61] = 570; cm[62] = 570; cm[63] = 500;
    cm[64] = 930; cm[65] = 722; cm[66] = 667; cm[67] = 722;
    cm[68] = 722; cm[69] = 667; cm[70] = 611; cm[71] = 778;
    cm[72] = 778; cm[73] = 389; cm[74] = 500; cm[75] = 778;
    cm[76] = 667; cm[77] = 944; cm[78] = 722; cm[79] = 778;
    cm[80] = 611; cm[81] = 778; cm[82] = 722; cm[83] = 556;
    cm[84] = 667; cm[85] = 722; cm[86] = 722; cm[87] = 1000;
    cm[88] = 722; cm[89] = 722; cm[90] = 667; cm[91] = 333;
    cm[92] = 278; cm[93] = 333; cm[94] = 581; cm[95] = 500;
    cm[96] = 333; cm[97] = 500; cm[98] = 556; cm[99] = 444;
    cm[100] = 556; cm[101] = 444; cm[102] = 333;
    cm[103] = 500; cm[104] = 556; cm[105] = 278;
    cm[106] = 333; cm[107] = 556; cm[108] = 278;
    cm[109] = 833; cm[110] = 556; cm[111] = 500;
    cm[112] = 556; cm[113] = 556; cm[114] = 444;
    cm[115] = 389; cm[116] = 333; cm[117] = 556;
    cm[118] = 500; cm[119] = 722; cm[120] = 500;
    cm[121] = 500; cm[122] = 444; cm[123] = 394;
    cm[124] = 220; cm[125] = 394; cm[126] = 520;
    cm[161] = 333; cm[162] = 500; cm[163] = 500;
    cm[164] = 167; cm[165] = 500; cm[166] = 500;
    cm[167] = 500; cm[168] = 500; cm[169] = 278;
    cm[170] = 500; cm[171] = 500; cm[172] = 333;
    cm[173] = 333; cm[174] = 556; cm[175] = 556;
    cm[177] = 500; cm[178] = 500; cm[179] = 500;
    cm[180] = 250; cm[182] = 540; cm[183] = 350;
    cm[184] = 333; cm[185] = 500; cm[186] = 500;
    cm[187] = 500; cm[188] = 1000; cm[189] = 1000;
    cm[191] = 500; cm[193] = 333; cm[194] = 333;
    cm[195] = 333; cm[196] = 333; cm[197] = 333;
    cm[198] = 333; cm[199] = 333; cm[200] = 333;
    cm[202] = 333; cm[203] = 333; cm[205] = 333;
    cm[206] = 333; cm[207] = 333; cm[208] = 1000;
    cm[225] = 1000; cm[227] = 300; cm[232] = 667;
    cm[233] = 778; cm[234] = 1000; cm[235] = 330;
    cm[241] = 722; cm[245] = 278; cm[248] = 278;
    cm[249] = 500; cm[250] = 722; cm[251] = 556;
    thisfont.Width = cm;
    return thisfont;
  }


font getTimesBI()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Times-BoldItalic";
    thisfont.FontBBox = {-200, -218, 996, 921};
    std::map<uint16_t, int> cm;
    cm[32] = 250; cm[33] = 389; cm[34] = 555; cm[35] = 500;
    cm[36] = 500; cm[37] = 833; cm[38] = 778; cm[39] = 333;
    cm[40] = 333; cm[41] = 333; cm[42] = 500; cm[43] = 570;
    cm[44] = 250; cm[45] = 333; cm[46] = 250; cm[47] = 278;
    cm[48] = 500; cm[49] = 500; cm[50] = 500; cm[51] = 500;
    cm[52] = 500; cm[53] = 500; cm[54] = 500; cm[55] = 500;
    cm[56] = 500; cm[57] = 500; cm[58] = 333; cm[59] = 333;
    cm[60] = 570; cm[61] = 570; cm[62] = 570; cm[63] = 500;
    cm[64] = 832; cm[65] = 667; cm[66] = 667; cm[67] = 667;
    cm[68] = 722; cm[69] = 667; cm[70] = 667; cm[71] = 722;
    cm[72] = 778; cm[73] = 389; cm[74] = 500; cm[75] = 667;
    cm[76] = 611; cm[77] = 889; cm[78] = 722; cm[79] = 722;
    cm[80] = 611; cm[81] = 722; cm[82] = 667; cm[83] = 556;
    cm[84] = 611; cm[85] = 722; cm[86] = 667; cm[87] = 889;
    cm[88] = 667; cm[89] = 611; cm[90] = 611; cm[91] = 333;
    cm[92] = 278; cm[93] = 333; cm[94] = 570; cm[95] = 500;
    cm[96] = 333; cm[97] = 500; cm[98] = 500; cm[99] = 444;
    cm[100] = 500; cm[101] = 444; cm[102] = 333;
    cm[103] = 500; cm[104] = 556; cm[105] = 278;
    cm[106] = 278; cm[107] = 500; cm[108] = 278;
    cm[109] = 778; cm[110] = 556; cm[111] = 500;
    cm[112] = 500; cm[113] = 500; cm[114] = 389;
    cm[115] = 389; cm[116] = 278; cm[117] = 556;
    cm[118] = 444; cm[119] = 667; cm[120] = 500;
    cm[121] = 444; cm[122] = 389; cm[123] = 348;
    cm[124] = 220; cm[125] = 348; cm[126] = 570;
    cm[161] = 389; cm[162] = 500; cm[163] = 500;
    cm[164] = 167; cm[165] = 500; cm[166] = 500;
    cm[167] = 500; cm[168] = 500; cm[169] = 278;
    cm[170] = 500; cm[171] = 500; cm[172] = 333;
    cm[173] = 333; cm[174] = 556; cm[175] = 556;
    cm[177] = 500; cm[178] = 500; cm[179] = 500;
    cm[180] = 250; cm[182] = 500; cm[183] = 350;
    cm[184] = 333; cm[185] = 500; cm[186] = 500;
    cm[187] = 500; cm[188] = 1000; cm[189] = 1000;
    cm[191] = 500; cm[193] = 333; cm[194] = 333;
    cm[195] = 333; cm[196] = 333; cm[197] = 333;
    cm[198] = 333; cm[199] = 333; cm[200] = 333;
    cm[202] = 333; cm[203] = 333; cm[205] = 333;
    cm[206] = 333; cm[207] = 333; cm[208] = 1000;
    cm[225] = 944; cm[227] = 266; cm[232] = 611;
    cm[233] = 722; cm[234] = 944; cm[235] = 300;
    cm[241] = 722; cm[245] = 278; cm[248] = 278;
    cm[249] = 500; cm[250] = 722; cm[251] = 500;
    thisfont.Width = cm;
    return thisfont;
  }


font getTimesItalic()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Times-Italic";
    thisfont.FontBBox = {-169, -217, 1010, 883};
    std::map<uint16_t, int> cm;
    cm[32] = 250; cm[33] = 333; cm[34] = 420; cm[35] = 500;
    cm[36] = 500; cm[37] = 833; cm[38] = 778; cm[39] = 333;
    cm[40] = 333; cm[41] = 333; cm[42] = 500; cm[43] = 675;
    cm[44] = 250; cm[45] = 333; cm[46] = 250; cm[47] = 278;
    cm[48] = 500; cm[49] = 500; cm[50] = 500; cm[51] = 500;
    cm[52] = 500; cm[53] = 500; cm[54] = 500; cm[55] = 500;
    cm[56] = 500; cm[57] = 500; cm[58] = 333; cm[59] = 333;
    cm[60] = 675; cm[61] = 675; cm[62] = 675; cm[63] = 500;
    cm[64] = 920; cm[65] = 611; cm[66] = 611; cm[67] = 667;
    cm[68] = 722; cm[69] = 611; cm[70] = 611; cm[71] = 722;
    cm[72] = 722; cm[73] = 333; cm[74] = 444; cm[75] = 667;
    cm[76] = 556; cm[77] = 833; cm[78] = 667; cm[79] = 722;
    cm[80] = 611; cm[81] = 722; cm[82] = 611; cm[83] = 500;
    cm[84] = 556; cm[85] = 722; cm[86] = 611; cm[87] = 833;
    cm[88] = 611; cm[89] = 556; cm[90] = 556; cm[91] = 389;
    cm[92] = 278; cm[93] = 389; cm[94] = 422; cm[95] = 500;
    cm[96] = 333; cm[97] = 500; cm[98] = 500; cm[99] = 444;
    cm[100] = 500; cm[101] = 444; cm[102] = 278;
    cm[103] = 500; cm[104] = 500; cm[105] = 278;
    cm[106] = 278; cm[107] = 444; cm[108] = 278;
    cm[109] = 722; cm[110] = 500; cm[111] = 500;
    cm[112] = 500; cm[113] = 500; cm[114] = 389;
    cm[115] = 389; cm[116] = 278; cm[117] = 500;
    cm[118] = 444; cm[119] = 667; cm[120] = 444;
    cm[121] = 444; cm[122] = 389; cm[123] = 400;
    cm[124] = 275; cm[125] = 400; cm[126] = 541;
    cm[161] = 389; cm[162] = 500; cm[163] = 500;
    cm[164] = 167; cm[165] = 500; cm[166] = 500;
    cm[167] = 500; cm[168] = 500; cm[169] = 214;
    cm[170] = 556; cm[171] = 500; cm[172] = 333;
    cm[173] = 333; cm[174] = 500; cm[175] = 500;
    cm[177] = 500; cm[178] = 500; cm[179] = 500;
    cm[180] = 250; cm[182] = 523; cm[183] = 350;
    cm[184] = 333; cm[185] = 556; cm[186] = 556;
    cm[187] = 500; cm[188] = 889; cm[189] = 1000;
    cm[191] = 500; cm[193] = 333; cm[194] = 333;
    cm[195] = 333; cm[196] = 333; cm[197] = 333;
    cm[198] = 333; cm[199] = 333; cm[200] = 333;
    cm[202] = 333; cm[203] = 333; cm[205] = 333;
    cm[206] = 333; cm[207] = 333; cm[208] = 889;
    cm[225] = 889; cm[227] = 276; cm[232] = 556;
    cm[233] = 722; cm[234] = 944; cm[235] = 310;
    cm[241] = 667; cm[245] = 278; cm[248] = 278;
    cm[249] = 500; cm[250] = 667; cm[251] = 500;
    thisfont.Width = cm;
    return thisfont;
  }

font getTimesRoman()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "Times-Roman";
    thisfont.FontBBox = {-168, -218, 1000, 898};
    std::map<uint16_t, int> cm;
    cm[32] = 250; cm[33] = 333; cm[34] = 408; cm[35] = 500;
    cm[36] = 500; cm[37] = 833; cm[38] = 778; cm[39] = 333;
    cm[40] = 333; cm[41] = 333; cm[42] = 500; cm[43] = 564;
    cm[44] = 250; cm[45] = 333; cm[46] = 250; cm[47] = 278;
    cm[48] = 500; cm[49] = 500; cm[50] = 500; cm[51] = 500;
    cm[52] = 500; cm[53] = 500; cm[54] = 500; cm[55] = 500;
    cm[56] = 500; cm[57] = 500; cm[58] = 278; cm[59] = 278;
    cm[60] = 564; cm[61] = 564; cm[62] = 564; cm[63] = 444;
    cm[64] = 921; cm[65] = 722; cm[66] = 667; cm[67] = 667;
    cm[68] = 722; cm[69] = 611; cm[70] = 556; cm[71] = 722;
    cm[72] = 722; cm[73] = 333; cm[74] = 389; cm[75] = 722;
    cm[76] = 611; cm[77] = 889; cm[78] = 722; cm[79] = 722;
    cm[80] = 556; cm[81] = 722; cm[82] = 667; cm[83] = 556;
    cm[84] = 611; cm[85] = 722; cm[86] = 722; cm[87] = 944;
    cm[88] = 722; cm[89] = 722; cm[90] = 611; cm[91] = 333;
    cm[92] = 278; cm[93] = 333; cm[94] = 469; cm[95] = 500;
    cm[96] = 333; cm[97] = 444; cm[98] = 500; cm[99] = 444;
    cm[100] = 500; cm[101] = 444; cm[102] = 333;
    cm[103] = 500; cm[104] = 500; cm[105] = 278;
    cm[106] = 278; cm[107] = 500; cm[108] = 278;
    cm[109] = 778; cm[110] = 500; cm[111] = 500;
    cm[112] = 500; cm[113] = 500; cm[114] = 333;
    cm[115] = 389; cm[116] = 278; cm[117] = 500;
    cm[118] = 500; cm[119] = 722; cm[120] = 500;
    cm[121] = 500; cm[122] = 444; cm[123] = 480;
    cm[124] = 200; cm[125] = 480; cm[126] = 541;
    cm[161] = 333; cm[162] = 500; cm[163] = 500;
    cm[164] = 167; cm[165] = 500; cm[166] = 500;
    cm[167] = 500; cm[168] = 500; cm[169] = 180;
    cm[170] = 444; cm[171] = 500; cm[172] = 333;
    cm[173] = 333; cm[174] = 556; cm[175] = 556;
    cm[177] = 500; cm[178] = 500; cm[179] = 500;
    cm[180] = 250; cm[182] = 453; cm[183] = 350;
    cm[184] = 333; cm[185] = 444; cm[186] = 444;
    cm[187] = 500; cm[188] = 1000; cm[189] = 1000;
    cm[191] = 444; cm[193] = 333; cm[194] = 333;
    cm[195] = 333; cm[196] = 333; cm[197] = 333;
    cm[198] = 333; cm[199] = 333; cm[200] = 333;
    cm[202] = 333; cm[203] = 333; cm[205] = 333;
    cm[206] = 333; cm[207] = 333; cm[208] = 1000;
    cm[225] = 889; cm[227] = 276; cm[232] = 611;
    cm[233] = 722; cm[234] = 889; cm[235] = 310;
    cm[241] = 667; cm[245] = 278; cm[248] = 278;
    cm[249] = 500; cm[250] = 722; cm[251] = 500;
    thisfont.Width = cm;
    return thisfont;
  }

font getDingbats()
  {
    font thisfont;
    thisfont.FontRef = "Core";
    thisfont.FontName = "ZapfDingbats";
    thisfont.FontBBox = {-1, -143, 981, 820};
    std::map<uint16_t, int> cm;
    cm[32] = 278; cm[33] = 974; cm[34] = 961; cm[35] = 974;
    cm[36] = 980; cm[37] = 719; cm[38] = 789; cm[39] = 790;
    cm[40] = 791; cm[41] = 690; cm[42] = 960; cm[43] = 939;
    cm[44] = 549; cm[45] = 855; cm[46] = 911; cm[47] = 933;
    cm[48] = 911; cm[49] = 945; cm[50] = 974; cm[51] = 755;
    cm[52] = 846; cm[53] = 762; cm[54] = 761; cm[55] = 571;
    cm[56] = 677; cm[57] = 763; cm[58] = 760; cm[59] = 759;
    cm[60] = 754; cm[61] = 494; cm[62] = 552; cm[63] = 537;
    cm[64] = 577; cm[65] = 692; cm[66] = 786; cm[67] = 788;
    cm[68] = 788; cm[69] = 790; cm[70] = 793; cm[71] = 794;
    cm[72] = 816; cm[73] = 823; cm[74] = 789; cm[75] = 841;
    cm[76] = 823; cm[77] = 833; cm[78] = 816; cm[79] = 831;
    cm[80] = 923; cm[81] = 744; cm[82] = 723; cm[83] = 749;
    cm[84] = 790; cm[85] = 792; cm[86] = 695; cm[87] = 776;
    cm[88] = 768; cm[89] = 792; cm[90] = 759; cm[91] = 707;
    cm[92] = 708; cm[93] = 682; cm[94] = 701; cm[95] = 826;
    cm[96] = 815; cm[97] = 789; cm[98] = 789; cm[99] = 707;
    cm[100] = 687; cm[101] = 696; cm[102] = 689;
    cm[103] = 786; cm[104] = 787; cm[105] = 713;
    cm[106] = 791; cm[107] = 785; cm[108] = 791;
    cm[109] = 873; cm[110] = 761; cm[111] = 762;
    cm[112] = 762; cm[113] = 759; cm[114] = 759;
    cm[115] = 892; cm[116] = 892; cm[117] = 788;
    cm[118] = 784; cm[119] = 438; cm[120] = 138;
    cm[121] = 277; cm[122] = 415; cm[123] = 392;
    cm[124] = 392; cm[125] = 668; cm[126] = 668;
    cm[128] = 390; cm[129] = 390; cm[130] = 317;
    cm[131] = 317; cm[132] = 276; cm[133] = 276;
    cm[134] = 509; cm[135] = 509; cm[136] = 410;
    cm[137] = 410; cm[138] = 234; cm[139] = 234;
    cm[140] = 334; cm[141] = 334; cm[161] = 732;
    cm[162] = 544; cm[163] = 544; cm[164] = 910;
    cm[165] = 667; cm[166] = 760; cm[167] = 760;
    cm[168] = 776; cm[169] = 595; cm[170] = 694;
    cm[171] = 626; cm[172] = 788; cm[173] = 788;
    cm[174] = 788; cm[175] = 788; cm[176] = 788;
    cm[177] = 788; cm[178] = 788; cm[179] = 788;
    cm[180] = 788; cm[181] = 788; cm[182] = 788;
    cm[183] = 788; cm[184] = 788; cm[185] = 788;
    cm[186] = 788; cm[187] = 788; cm[188] = 788;
    cm[189] = 788; cm[190] = 788; cm[191] = 788;
    cm[192] = 788; cm[193] = 788; cm[194] = 788;
    cm[195] = 788; cm[196] = 788; cm[197] = 788;
    cm[198] = 788; cm[199] = 788; cm[200] = 788;
    cm[201] = 788; cm[202] = 788; cm[203] = 788;
    cm[204] = 788; cm[205] = 788; cm[206] = 788;
    cm[207] = 788; cm[208] = 788; cm[209] = 788;
    cm[210] = 788; cm[211] = 788; cm[212] = 894;
    cm[213] = 838; cm[214] = 1016; cm[215] = 458;
    cm[216] = 748; cm[217] = 924; cm[218] = 748;
    cm[219] = 918; cm[220] = 927; cm[221] = 928;
    cm[222] = 928; cm[223] = 834; cm[224] = 873;
    cm[225] = 828; cm[226] = 924; cm[227] = 924;
    cm[228] = 917; cm[229] = 930; cm[230] = 931;
    cm[231] = 463; cm[232] = 883; cm[233] = 836;
    cm[234] = 836; cm[235] = 867; cm[236] = 867;
    cm[237] = 696; cm[238] = 696; cm[239] = 874;
    cm[241] = 874; cm[242] = 760; cm[243] = 946;
    cm[244] = 771; cm[245] = 865; cm[246] = 771;
    cm[247] = 888; cm[248] = 967; cm[249] = 888;
    cm[250] = 831; cm[251] = 873; cm[252] = 927;
    cm[253] = 970; cm[254] = 918;
    thisfont.Width = cm;
    return thisfont;
  }





std::map<int, std::string> ligatures()
  {
    std::map<int, std::string> res;
    res[0xFB00] = "ff";
    res[0xFB01] = "fi";
    res[0xFB02] = "fl";
    res[0xFB03] = "ffi";
    res[0xFB04] = "ffl";
    res[0xFB06] = "st";
    return(res);
  }


